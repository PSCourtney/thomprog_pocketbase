@using Thomprog.Services;
<MudExpansionPanel HideIcon="true">
    <TitleContent>
        <div class="d-flex">
            <MudText Class="mt-1">Border Radius</MudText>
            <MudAvatar Color="Color.Primary" Class="d-flex ml-auto"
                style="width: 30px;height:30px;font-size:small!important">@Radius.ToString()
            </MudAvatar>
        </div>
    </TitleContent>
    <ChildContent>
        <MudSlider @bind-Value="@Radius" Min="0" Max="@MaxValue" Immediate="false" Step="1" Color="Color.Primary"
            @oninput="@((e) => ChangedSelection(e))">
            @Radius.ToString()</MudSlider>
    </ChildContent>
</MudExpansionPanel>
@code{
    [Parameter]
    public int Radius { get; set; }

    [Parameter]
    public int MaxValue { get; set; } = 30;

    [Parameter]
    public EventCallback<int> OnSliderChanged { get; set; }

    protected override async Task OnInitializedAsync()
    {
        Radius = PreferenceService.themePreference.borderRadius;

    }

    private async Task ChangedSelection(ChangeEventArgs args)
    {
        Radius = int.Parse(args?.Value?.ToString() ?? "0");
        await OnSliderChanged.InvokeAsync(Radius);
    }
}